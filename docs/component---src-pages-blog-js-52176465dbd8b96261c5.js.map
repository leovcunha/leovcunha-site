{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/blog.js"],"names":["Bio","data","useStaticQuery","site","siteMetadata","author","social","useScrollPosition","id","css","fixed","avatar","childImageSharp","alt","name","style","marginRight","rhythm","marginBottom","minWidth","borderRadius","imgStyle","summary","href","Blog","location","siteTitle","title","posts","allMarkdownRemark","edges","socialNetworks","map","node","frontmatter","fields","slug","key","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6FAAA,mFAkFeA,IAnEH,WACV,IAAMC,EAAOC,yBAAe,aADZ,EA2BWD,EAAKE,KAAKC,aAA7BC,EA3BQ,EA2BRA,OA3BQ,KA2BAC,OAEYC,eA7BZ,UA+BhB,OACE,mBACEC,GAAG,QACHC,IAAKA,YAAF,kFAK+B,EAL/B,IAbS,iFAaT,SASH,YAAC,IAAD,CACEC,MAAOT,EAAKU,OAAOC,gBAAgBF,MACnCG,IAAKR,EAAOS,KACZC,MAAO,CACLC,YAAaC,YAAO,IACpBC,aAAa,OACbC,SAAU,IACVC,aAAa,QAEfC,SAAU,CACRD,aAAa,SAGjB,qBACGf,EAAOS,KADV,IACiBT,EAAOiB,QADxB,IAGE,uBAHF,2CAI0C,iBAAGC,KAAK,OAAR,WAE1C,yB,kCC7EN,6FAoDeC,UA7CF,SAAC,GAAwB,IAAtBvB,EAAqB,EAArBA,KAAMwB,EAAe,EAAfA,SACdC,EAAYzB,EAAKE,KAAKC,aAAauB,MACnCC,EAAQ3B,EAAK4B,kBAAkBC,MAC/BC,EAAiB9B,EAAKE,KAAKC,aAAaE,OAE9C,OACE,YAAC,IAAD,CACEmB,SAAUA,EACVE,MAAOD,EACPK,eAAgBA,GAEhB,YAAC,IAAD,CAAKJ,MAAM,cACVC,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KACpD,OACE,uBAASC,IAAKJ,EAAKE,OAAOC,MACxB,0BACE,kBACErB,MAAO,CACLG,aAAcD,YAAO,EAAI,KAG3B,YAAC,OAAD,CACEF,MAAO,CAAEuB,UAAU,QACnBC,GAAE,QAAUN,EAAKE,OAAOC,MAEvBT,IAGL,yBAAQM,EAAKC,YAAYM,OAE3B,2BACE,iBACEC,wBAAyB,CACvBC,OAAQT,EAAKC,YAAYS,aAAeV,EAAKW","file":"component---src-pages-blog-js-52176465dbd8b96261c5.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { css } from \"@emotion/react\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\nimport useScrollPosition from \"./useScrollPosition\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 150, height: 150) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  const centralize = `\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  `\n\n  const { author, social } = data.site.siteMetadata\n\n  const [scroll, setScroll] = useScrollPosition()\n\n  return (\n    <div\n      id=\"about\"\n      css={css`\n        display: flex;\n        margin-top: 6rem;\n        margin-bottom: 15rem;\n        transition: opacity 2s;\n        opacity: ${/*scroll > 0 ? 0 :*/ 1};\n        ${centralize}\n      `}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author.name}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: `1rem`,\n          minWidth: 150,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        {author.name} {author.summary}\n        {` `}\n        <br />\n        To know more about me take a look at my <a href=\"/cv\">resume</a>\n      </p>\n      <p></p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst Blog = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const socialNetworks = data.site.siteMetadata.social\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      socialNetworks={socialNetworks}\n    >\n      <SEO title=\"All posts\" />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link\n                  style={{ boxShadow: `none` }}\n                  to={`/blog${node.fields.slug}`}\n                >\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default Blog\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        social {\n          twitter\n          github\n          linkedin\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}